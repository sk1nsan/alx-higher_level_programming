The 7-base_geometry module
======================

Using integer_validator
-------------------
>>> BaseGeometry = __import__("7-base_geometry").BaseGeometry
>>> bg = BaseGeometry()

error when no arguments


>>> bg.integer_validator()
Traceback (most recent call last):
TypeError: integer_validator() missing 2 required positional arguments: 'name' and 'value'


error when name is missing

>>> bg.integer_validator(value= 0)
Traceback (most recent call last):
TypeError: integer_validator() missing 1 required positional argument: 'name'


error when value is missing

>>> bg.integer_validator("a",)
Traceback (most recent call last):
TypeError: integer_validator() missing 1 required positional argument: 'value'


error when more than 2 argument

>>> bg.integer_validator("a", 100, 300)
Traceback (most recent call last):
TypeError: integer_validator() takes 3 positional arguments but 4 were given


works when value is intger greater than 0 and name is a string

>>> bg.integer_validator("a", 100)

works when value is intger greater than 0 and name is a not a string

>>> bg.integer_validator(10, 100)
>>> bg.integer_validator(None, 89)
>>> bg.integer_validator([1, 2, 3], 175)


TypeError when value is not an intger

>>> bg.integer_validator("a", "a")
Traceback (most recent call last):
TypeError: a must be an integer

>>> bg.integer_validator("a", "100")
Traceback (most recent call last):
TypeError: a must be an integer

>>> bg.integer_validator("a", None)
Traceback (most recent call last):
TypeError: a must be an integer

>>> bg.integer_validator("a", [1, 2, 3])
Traceback (most recent call last):
TypeError: a must be an integer

>>> bg.integer_validator("a", 175.2)
Traceback (most recent call last):
TypeError: a must be an integer

>>> bg.integer_validator("a", [1, 2])
Traceback (most recent call last):
TypeError: a must be an integer

>>> bg.integer_validator("a", [])
Traceback (most recent call last):
TypeError: a must be an integer

>>> bg.integer_validator("a", {})
Traceback (most recent call last):
TypeError: a must be an integer

>>> bg.integer_validator("a", {1:2})
Traceback (most recent call last):
TypeError: a must be an integer

>>> bg.integer_validator("a", ())
Traceback (most recent call last):
TypeError: a must be an integer
>>> bg.integer_validator("a", (1))
Traceback (most recent call last):
TypeError: a must be an integer

>>> bg.integer_validator("a", (1, 2))
Traceback (most recent call last):
TypeError: a must be an integer

ValueError when value is less than or equal to zero

>>> bg.integer_validator("a", 0)
Traceback (most recent call last):
ValueError: a must be greater than 0

>>> bg.integer_validator("a", -100)
Traceback (most recent call last):
ValueError: a must be greater than 0
